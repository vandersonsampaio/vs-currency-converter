plugins {
    id 'java'
    id "io.spring.dependency-management" version "1.1.4"
    id 'org.springframework.boot' version '3.2.1'
    id 'org.flywaydb.flyway' version '10.6.0'
}

group 'br.com.vs'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencyManagement{
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:3.2.1")
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.0")
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    implementation 'com.h2database:h2'

	implementation 'org.flywaydb:flyway-core:10.6.0'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'com.h2database:h2'

    testImplementation 'io.rest-assured:rest-assured:5.4.0'

    testImplementation 'com.github.tomakehurst:wiremock-standalone:3.0.1'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.9.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

springBoot {
    mainClass = 'br.com.vs.currency.converter.App'
}

jacoco {
    toolVersion = "0.8.11"
}

test {
    useJUnitPlatform()

    maxHeapSize = '1G'
}

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

processIntegrationResources {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    useJUnitPlatform()

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

task allTests {
    dependsOn test, integrationTest

    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn allTests
    sourceDirectories = files(sourceSets.main.allJava.srcDirs)
    classDirectories = files(sourceSets.main.output.classesDirs) + files(sourceSets.integration.output.classesDirs)
    additionalSourceDirs = files(sourceSets.test.allJava.srcDirs)

    additionalClassDirs.from(sourceSets.integration.output.classesDirs)
}

check.dependsOn allTests